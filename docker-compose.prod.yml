version: '3.8'
services:

  rabbitmq:
    image: rabbitmq:3-management    # Версия с включенной панелью управления
    container_name: rabbitmq
    ports:
      - "5672:5672"                 # Порт для взаимодействия с приложениями (AMQP)
      - "15672:15672"               # Порт для доступа к веб-интерфейсу управления RabbitMQ
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - broker-rabbit
    healthcheck:
      test: [ "CMD-SHELL", "rabbitmq-diagnostics ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  db-lp:
    image: postgres
    networks:
      - broker-rabbit
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "1000:5432"
    volumes:
      - database1_data:/var/lib/postgresql/data

  db-sm:
    image: postgres
    networks:
      - broker-rabbit
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "2000:5432"
    volumes:
      - database2_data:/var/lib/postgresql/data

  redis:
    networks:
      - broker-rabbit
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: ["redis-server", "--appendonly", "yes"]

  line-provider:
    networks:
      - broker-rabbit
    build: ./line-provider
    ports:
      - "8000:8000"
    env_file:
      - ./line-provider/.env.prod
    depends_on:
      rabbitmq:
        condition: service_healthy
      db-lp:
        condition: service_started
    restart: always


  score-maker:
    networks:
      - broker-rabbit
    build: ./score-maker
    ports:
      - "8001:8001"
    env_file:
      - ./score-maker/.env.prod
    depends_on:
      rabbitmq:
        condition: service_healthy
      db-sm:
        condition: service_started
      redis:
        condition: service_started
    restart: always

networks:
  broker-rabbit:
    driver: bridge

volumes:
  rabbitmq_data:
  database1_data:
  database2_data:
  redis_data: